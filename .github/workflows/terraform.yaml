name: Terraform

on:
  pull_request:
    branches:
      - main
  pull_request_review:
    types:
      - submitted

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Apply
        environment: dev
        run: echo "terraform apply"
  plan:
    name: Terraform
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        run: echo "Install Terraform"
      - name: Terraform Init
        id: init
        run: echo "terraform init"
      - name: Terraform Format
        id: fmt
        run: echo "terraform fmt"
      - name: Terraform Validate
        id: validate
        run: echo "terraform validate"
      - name: Terraform Plan
        id: plan
        run: echo "terraform plan"
        continue-on-error: true
      - name: Update Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            Terraform changes goes here
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
